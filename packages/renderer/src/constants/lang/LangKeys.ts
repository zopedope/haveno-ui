// =============================================================================
//  Copyright 2022 Haveno
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
// =============================================================================

export enum LangKeys {
  AppTitle = "app.title",
  AppHeading2 = "app.heading2",
  Header = "app.header",
  ConnectingToNetwork = "app.connectingToNetwork",
  WelcomeToHaveno = "app.welcomeToHaveno",
  Save = "app.save",
  CreatePassword = "onboarding.createPassword",
  AccountTitle = "account.title",
  AccountSidebarPaymentAccounts = "account.sidebar.paymentAccounts",
  AccountSidebarSecurity = "account.sidebar.security",
  AccountSidebarWallet = "account.sidebar.wallet",
  AccountSidebarBackup = "account.sidebar.backup",
  AccountSidebarNodeSettings = "account.sidebar.nodeSettings",
  AccountSecurityTitle = "account.security.title",
  AccountSecurityDesc = "account.security.desc",
  AccountNodeSettingsTitle = "account.nodeSecurity.title",
  AccountNodeSettingsDesc = "account.nodeSecurity.desc",
  AccountNodeSettingsLocal = "account.nodeSecurity.local.title",
  AccountNodeSettingsRemote = "account.nodeSecurity.remote.title",
  AccountNodeFieldBlockchainLocation = "account.nodeSecurity.blockchainLocation",
  AccountNodeFieldBootstrapUrl = "account.nodeSecurity.bootstrapUrl",
  AccountNodeFieldDaemonFlags = "account.nodeSecurity.daemonFlags",
  AccountNodeFieldPort = "account.nodeSecurity.port",
  AccountNodeStopDaemon = "account.nodeSecurity.stopDaemon",
  AccountNodeStartDaemon = "account.nodeSecurity.startDaemon",
  AccountNodeLocalSaveNotification = "account.nodeSecurity.saveNotification",
  AccountNodeDaemonStoppedNotif = "account.nodeSecurity.stoppedNotification",
  AccountNodeDaemonStartedNotif = "account.nodeSecurity.startedNotification",
  AccountSettingsAddNode = "account.settings.addNewNode",
  AccountSettingsCurrent = "account.settings.current",
  AccountSecurityFieldPassword = "account.security.field.password",
  AccountSecurityFieldRepeatPassword = "account.security.field.repeatPassword",
  AccountSecurityFieldCurrentPassword = "account.security.field.currentPassword",
  AccountSecurityFieldPasswordFormatMsg = "account.security.field.password.format.message",
  AccountSecurityFieldRepeatPasswordMatchMsg = "account.security.field.repeatPassword.match.message",
  AccountWalletTitle = "account.wallet.title",
  AccountWalletDesc = "account.wallet.desc",
  AccountWalletPassword = "account.wallet.field.password",
  AccountCardCopyBtn = "accountCard.copyButton",
  AccountCardCopiedBtn = "accountCard.copiedButton",
  AccountCardQRBtn = "accountCard.qrButton",
  AddressCardCopyBtn = "accountCard.copyButton",
  AddressCardCopiedBtn = "accountCard.copiedButton",
  AddressCardQRBtn = "accountCard.qrButton",
  AddressCardQRCodeSavedSuccessNotif = "accountCode.qrCodeSavedSuccessfully.notification",
  MyWalletSendFieldAmount = "myWallet.send.amountField",
  MyWalletSendFieldPaymentId = "myWallet.send.paymentIdField",
  MyWalletSendFieldPaymentIdPlaceholder = "myWallet.send.paymentIdFieldPlaceholder",
  MyWalletSendFieldAddress = "myWallet.send.addressField",
  MyWalletSendFieldAddressPlaceholder = "myWallet.send.addressFieldPlaceholder",
  MyWalletReceiveTitle = "myWallet.receive.receiveTitle",
  MyWalletMoneroTotalBalance = "myWallet.monero.totalBalance",
  MyWalletMoneroAvailableBalance = "myWallet.monero.availableBalance",
  MyWalletMoneroReservedFunds = "myWallet.monero.reservedFunds",
  MyWalletMoneroLockedFunds = "myWallet.monero.lockedFunds",
  MyWalletTabTransactions = "myWallet.transactionsTab",
  MyWalletTabSend = "myWallet.sendTab",
  MyWalletTabReceive = "myWallet.receive",
  MyWalletGenerateAddressBtn = "myWallet.receive.generateAddrBtn",
  MyWalletReceiveNoAddressesMsg = "myWallet.receive.noAddressesMsg",
  MyWalletSendSuccessNotif = "myWallet.send.successNotification",
  WalletDetailSent = "myWallet.detail.sent",
  WalletDetailReceived = "myWallet.detail.received",
  WalletDetailTransactionId = "myWallet.detail.transactionId",
  WalletDetailFee = "myWallet.detail.fee",
  WalletDetailDestinationAddress = "myWallet.detail.destinationAddress",
  WalletDetailIncomingAddress = "myWallet.detail.incomingAddress",
  WalletDetailHeight = "myWallet.detail.height",
  WalletDetailReceiptAddress = "myWallet.detail.receiptAddress",
  MyWalletBalancePrimaryAddress = "myWallet.balance.primaryAddress",
  MyWalletSendBackToWallet = "myWallet.sendForm.backToWalletBtn",
  MyWalletSendSuccessModalTitle = "myWallet.sendSuccessModal.title",
  MyWalletSendSuccessModalMsg = "myWallet.sendSuccessModal.message",
  MyWalletQRModalPrimaryAddress = "myWallet.qrModal.primaryAddress",
  MyWalletQRModalReturnBtn = "myWallet.qrModal.returnBtn",
  MyWalletQRModalDownloadQRBtn = "myWallet.qrModal.downloadBtn",
  AccountBackupDownloadTitle = "account.backup.download.title",
  AccountBackupDownloadDesc = "account.backup.download.desc",
  AccountBackupDownloadBtn = "account.backup.download.btn",
  AccountBackupRestoreTitle = "account.backup.restore.title",
  AccountBackupRestoreDesc = "account.backup.restore.desc",
  AccountBackupRestoreBtn = "account.backup.restore.btn",
  AccountBackupDownloadSuccessNotif = "account.backup.download.successNotification",
  AccountBackupRestoreSuccessNotif = "account.backup.restore.successNotification",
  MarketsOffersColumnPrice = "marketsOffers.columnPrice",
  MarketsOffersColumnAmount = "marketsOffers.columnAmount",
  MarketsOffersColumnCost = "marketsOffers.columnCost",
  MarketsOffersColumnPaymentMethod = "marketsOffers.columnPaymentMethod",
  MarketsOffersColumnAccountAge = "marketsOffers.columnAccountAge",
  MarketsOffersColumnAccountTrades = "marketsOffers.columnAccountTypes",
  MarketsTransactionsColumnPrice = "marketsTransactions.columnPrice",
  MarketsTransactionsColumnAmount = "marketsTransactions.columnAmount",
  MarketsTransactionsColumnCost = "marketsTransactions.columnCost",
  MarketsTransactionsColumnPaymentMethod = "marketsTransactions.columnPaymentMethod",
  MarketsTransactionsColumnAccountAge = "marketsTransactions.columnAccountAge",
  MarketsTransactionsColumnAccountTrades = "marketsTransactions.columnAccountTypes",
  MarketsTransactionsCashByMail = "marketsTransactions.cashByMail",
  MarketOffersAmount = "marketOffers.filter.amount",
  MarketOffersWith = "marketOffers.filter.with",
  MarketOffersSwitchSell = "marketOffers.filter.switchSellBuy.sell",
  MarketOffersSwitchBuy = "marketOffers.filter.switchSellBuy.buy",
  MarketOffersPaymentMethod = "marketOffers.filter.paymentMethod",
  MarketOffersAccountDetails = "marketOffers.filter.accountDetails",
  MarketOffersShowMarketDepth = "marketOffers.filter.showMarketDepth",
  MarketOffersHideMarketDepth = "marketOffers.filter.hideMarketDepth",
  MarketOffersCreateOffer = "marketOffers.filter.createOffer",
  MarketOffersCurrency = "marketOffers.filter.currency",
  MarketOffersSigned = "marketOffers.filter.signed",
  MarketOffersTradesAmount = "marketOffers.filter.tradesAmount",
  MarketOffersDaysAge = "marketOffers.filter.daysAge",
  MarketPaymentMethodColMethodName = "marketOffers.filter.paymentMethodColMethodName",
  MarketPaymentMethodColRateTradeLimit = "marketOffers.filter.paymentMethodColRateTradeLimit",
  MarketPaymentMethodColInfo = "marketOffers.filter.paymentMethodColInfo",
  MarketTradingPairColPair = "marketOffers.tradingPairFilter.pairColumn",
  MarketTradingPairColLastPrice = "marketOffers.tradingPairFilter.lastPriceColumn",
  MarketTradingPairColDayChange = "marketOffers.tradingPairFilter.dayChangeColumn",
  MarketTradingPairColDayChangeVolume = "marketOffers.tradingPairFilter.dayChangeVolumColumn",
  MarketFilterAccountLabelSignedAccounts = "marketFilters.accountFilter.labelSignedAccounts",
  MarketFilterAccountDescSignedAccounts = "marketFilters.accountFilter.descSignedAccounts",
  MarketFilterAccountLabelMinAccountAge = "marketFilters.accountFilter.labelMinAccountAge",
  MarketFilterAccountDescMinAccountAge = "marketFilters.accountFilter.descMinAccountAge",
  MarketFilterAccountLabelAmountTrades = "marketFilters.accountFilter.labelAmountTrades",
  MarketFilterAccountDescAmountTrades = "marketFilters.accountFilter.descAmountTrades",
  MarketFilterAccountTrades = "marketFilters.accountFilter.trades",
  MarketFilterAccountDays = "marketFilters.accountFilter.days",
  MarketFilterAccountClearFiltersBtn = "marketFilters.accountFilter.clearFiltersBtn",
  MarketFilterAccountSaveBtn = "marketFilters.accountFilter.saveBtn",
  MarketAmountFilterFieldMinAmountTrades = "MarketFilterFieldMinAmountTrades",
  MarketAmountFilterFieldMinAmountTradesDesc = "MarketFilterFieldMinAmountTradesDesc",
  MarketAmountFilterFieldMaxAmount = "MarketFilterFieldMaxAmount",
  MarketAmountFilterFieldMaxAmountDesc = "MarketFilterFieldMaxAmountDesc",
  MarketAmountFilterAmountClearFiltersBtn = "MarketFilterAmountClearFiltersBtn",
  MarketAmountFilterAmountSaveBtn = "MarketFilterAmountSaveBtn",
}
